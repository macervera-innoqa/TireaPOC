/*Copyright (c) 2020-2021 TIREA All Rights Reserved.
 This software is the confidential and proprietary information of TIREA You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with TIREA*/
package es.tirea.wavemaker.consultaFacturas.desa;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * FichProcesados generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`FICH_PROCESADOS`")
public class FichProcesados implements Serializable {

    private Integer idFichero;
    private Integer idFactura;
    private String nombre;
    private String rutaOrigen;
    private String rutaDestino;
    private Timestamp fechaProceso;
    private String error;
    private Facturas facturas;

    @Id
    @Column(name = "`ID_FICHERO`", nullable = false, scale = 0, precision = 10)
    public Integer getIdFichero() {
        return this.idFichero;
    }

    public void setIdFichero(Integer idFichero) {
        this.idFichero = idFichero;
    }

    @Column(name = "`ID_FACTURA`", nullable = true, scale = 0, precision = 10)
    public Integer getIdFactura() {
        return this.idFactura;
    }

    public void setIdFactura(Integer idFactura) {
        this.idFactura = idFactura;
    }

    @Column(name = "`NOMBRE`", nullable = false, length = 44)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "`RUTA_ORIGEN`", nullable = false, length = 255)
    public String getRutaOrigen() {
        return this.rutaOrigen;
    }

    public void setRutaOrigen(String rutaOrigen) {
        this.rutaOrigen = rutaOrigen;
    }

    @Column(name = "`RUTA_DESTINO`", nullable = false, length = 255)
    public String getRutaDestino() {
        return this.rutaDestino;
    }

    public void setRutaDestino(String rutaDestino) {
        this.rutaDestino = rutaDestino;
    }

    @Column(name = "`FECHA_PROCESO`", nullable = false)
    public Timestamp getFechaProceso() {
        return this.fechaProceso;
    }

    public void setFechaProceso(Timestamp fechaProceso) {
        this.fechaProceso = fechaProceso;
    }

    @Column(name = "`ERROR`", nullable = true, length = 255)
    public String getError() {
        return this.error;
    }

    public void setError(String error) {
        this.error = error;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ID_FACTURA`", referencedColumnName = "`ID_FACTURA`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_FICH_PROCESADOS_FACTURAS`"))
    @Fetch(FetchMode.JOIN)
    public Facturas getFacturas() {
        return this.facturas;
    }

    public void setFacturas(Facturas facturas) {
        if(facturas != null) {
            this.idFactura = facturas.getIdFactura();
        }

        this.facturas = facturas;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof FichProcesados)) return false;
        final FichProcesados fichProcesados = (FichProcesados) o;
        return Objects.equals(getIdFichero(), fichProcesados.getIdFichero());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdFichero());
    }
}
